(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{525:function(t,s,a){"use strict";a.r(s);var e=a(2),v=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("CSS定位与浮动常识汇总")]),t._v(" "),a("h2",{attrs:{id:"_1-为什么需要清除浮动？清除浮动的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-为什么需要清除浮动？清除浮动的方式"}},[t._v("#")]),t._v(" 1. 为什么需要清除浮动？清除浮动的方式")]),t._v(" "),a("p",[a("strong",[t._v("浮动的定义：")]),t._v(" 非IE浏览器下，容器不设高度且子元素浮动时，容器高度不能被内容撑开。 此时，内容会溢出到容器外面而影响布局。这种现象被称为浮动（溢出）。")]),t._v(" "),a("p",[a("strong",[t._v("浮动的工作原理：")])]),t._v(" "),a("ul",[a("li",[t._v("浮动元素脱离文档流，不占据空间（引起“高度塌陷”现象）")]),t._v(" "),a("li",[t._v("浮动元素碰到包含它的边框或者其他浮动元素的边框停留")])]),t._v(" "),a("p",[t._v("浮动元素可以左右移动，直到遇到另一个浮动元素或者遇到它外边缘的包含框。浮动框不属于文档流中的普通流，当元素浮动之后，不会影响块级元素的布局，只会影响内联元素布局。此时文档流中的普通流就会表现得该浮动框不存在一样的布局模式。当包含框的高度小于浮动框的时候，此时就会出现“高度塌陷”。")]),t._v(" "),a("p",[a("strong",[t._v("浮动元素引起的问题？")])]),t._v(" "),a("ul",[a("li",[t._v("父元素的高度无法被撑开，影响与父元素同级的元素")]),t._v(" "),a("li",[t._v("与浮动元素同级的非浮动元素会跟随其后")]),t._v(" "),a("li",[t._v("若浮动的元素不是第一个元素，则该元素之前的元素也要浮动，否则会影响页面的显示结构")])]),t._v(" "),a("p",[a("strong",[t._v("清除浮动的方式如下：")])]),t._v(" "),a("ul",[a("li",[t._v("给父级div定义"),a("code",[t._v("height")]),t._v("属性")]),t._v(" "),a("li",[t._v("最后一个浮动元素之后添加一个空的div标签，并添加"),a("code",[t._v("clear:both")]),t._v("样式")]),t._v(" "),a("li",[t._v("包含浮动元素的父级标签添加"),a("code",[t._v("overflow:hidden")]),t._v("或者"),a("code",[t._v("overflow:auto")])]),t._v(" "),a("li",[t._v("使用 :after 伪元素。由于IE6-7不支持 :after，使用 zoom:1 触发 "),a("strong",[t._v("hasLayout")])])]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".clearfix:after")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\200B"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" table"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" both"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".clearfix")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    *"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("zoom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"_2-使用-clear-属性清除浮动的原理？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用-clear-属性清除浮动的原理？"}},[t._v("#")]),t._v(" 2. 使用 clear 属性清除浮动的原理？")]),t._v(" "),a("p",[t._v("使用clear属性清除浮动，其语法如下：")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("none|left|right|both\n")])])]),a("p",[t._v("如果单看字面意思，clear:left 是“清除左浮动”，clear:right 是“清除右浮动”，实际上，这种解释是有问题的，因为浮动一直还在，并没有清除。")]),t._v(" "),a("p",[t._v("官方对clear属性解释：“"),a("strong",[t._v("元素盒子的边不能和前面的浮动元素相邻")]),t._v("”，对元素设置clear属性是为了避免浮动元素对该元素的影响，而不是清除掉浮动。")]),t._v(" "),a("p",[t._v("还需要注意 clear 属性指的是元素盒子的边不能和前面的浮动元素相邻，注意这里“"),a("strong",[t._v("前面的")]),t._v("”3个字，也就是clear属性对“后面的”浮动元素是不闻不问的。考虑到float属性要么是left，要么是right，不可能同时存在，同时由于clear属性对“后面的”浮动元素不闻不问，因此，当clear:left有效的时候，clear:right必定无效，也就是此时clear:left等同于设置clear:both；同样地，clear:right如果有效也是等同于设置clear:both。由此可见，clear:left和clear:right这两个声明就没有任何使用的价值，至少在CSS世界中是如此，直接使用clear:both吧。")]),t._v(" "),a("p",[t._v("一般使用伪元素的方式清除浮动：")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".clear::after")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("both"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("clear属性只有块级元素才有效的，而::after等伪元素默认都是内联水平，这就是借助伪元素清除浮动影响时需要设置display属性值的原因。")]),t._v(" "),a("h2",{attrs:{id:"_3-对bfc的理解，如何创建bfc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-对bfc的理解，如何创建bfc"}},[t._v("#")]),t._v(" 3. 对BFC的理解，如何创建BFC")]),t._v(" "),a("p",[t._v("先来看两个相关的概念：")]),t._v(" "),a("ul",[a("li",[t._v("Box: Box 是 CSS 布局的对象和基本单位，⼀个⻚⾯是由很多个 Box 组成的，这个Box就是我们所说的盒模型。")]),t._v(" "),a("li",[t._v("Formatting context：块级上下⽂格式化，它是⻚⾯中的⼀块渲染区域，并且有⼀套渲染规则，它决定了其⼦元素将如何定位，以及和其他元素的关系和相互作⽤。")])]),t._v(" "),a("p",[t._v("块格式化上下文（Block Formatting Context，BFC）是Web页面的可视化CSS渲染的一部分，是布局过程中生成块级盒子的区域，也是浮动元素与其他元素的交互限定区域。")]),t._v(" "),a("p",[t._v("通俗来讲：BFC是一个独立的布局环境，可以理解为一个容器，在这个容器中按照一定规则进行物品摆放，并且不会影响其它环境中的物品。如果一个元素符合触发BFC的条件，则BFC中的元素布局不受外部影响。")]),t._v(" "),a("p",[a("strong",[t._v("创建BFC的条件：")])]),t._v(" "),a("ul",[a("li",[t._v("根元素：body；")]),t._v(" "),a("li",[t._v("元素设置浮动：float 除 none 以外的值；")]),t._v(" "),a("li",[t._v("元素设置绝对定位：position (absolute、fixed)；")]),t._v(" "),a("li",[t._v("display 值为：inline-block、table-cell、table-caption、flex等；")]),t._v(" "),a("li",[t._v("overflow 值为：hidden、auto、scroll；")])]),t._v(" "),a("p",[a("strong",[t._v("BFC的特点：")])]),t._v(" "),a("ul",[a("li",[t._v("垂直方向上，自上而下排列，和文档流的排列方式一致。")]),t._v(" "),a("li",[t._v("在BFC中上下相邻的两个容器的margin会重叠")]),t._v(" "),a("li",[t._v("计算BFC的高度时，需要计算浮动元素的高度")]),t._v(" "),a("li",[t._v("BFC区域不会与浮动的容器发生重叠")]),t._v(" "),a("li",[t._v("BFC是独立的容器，容器内部元素不会影响外部元素")]),t._v(" "),a("li",[t._v("每个元素的左margin值和容器的左border相接触")])]),t._v(" "),a("p",[a("strong",[t._v("BFC的作用：")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("解决margin的重叠问题")]),t._v("：由于BFC是一个独立的区域，内部的元素和外部的元素互不影响，将两个元素变为两个BFC，就解决了margin重叠的问题。")]),t._v(" "),a("li",[a("strong",[t._v("解决高度塌陷的问题")]),t._v("：在对子元素设置浮动后，父元素会发生高度塌陷，也就是父元素的高度变为0。解决这个问题，只需要把父元素变成一个BFC。常用的办法是给父元素设置"),a("code",[t._v("overflow:hidden")]),t._v("。")]),t._v(" "),a("li",[a("strong",[t._v("创建自适应两栏布局")]),t._v("：可以用来创建自适应两栏布局：左边的宽度固定，右边的宽度自适应。")])]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".left")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" left"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".right")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 300px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" blue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n<div class="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"left"')]),t._v("></div>\n<div class="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"right"')]),t._v("></div>\n复制代码\n")])])]),a("p",[t._v("左侧设置"),a("code",[t._v("float:left")]),t._v("，右侧设置"),a("code",[t._v("overflow: hidden")]),t._v("。这样右边就触发了BFC，BFC的区域不会与浮动元素发生重叠，所以两侧就不会发生重叠，实现了自适应两栏布局。")]),t._v(" "),a("h2",{attrs:{id:"_4-什么是margin重叠问题？如何解决？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-什么是margin重叠问题？如何解决？"}},[t._v("#")]),t._v(" 4. 什么是margin重叠问题？如何解决？")]),t._v(" "),a("p",[a("strong",[t._v("问题描述：")]),t._v(" 两个块级元素的上外边距和下外边距可能会合并（折叠）为一个外边距，其大小会取其中外边距值大的那个，这种行为就是外边距折叠。需要注意的是，"),a("strong",[t._v("浮动的元素和绝对定位")]),t._v("这种脱离文档流的元素的外边距不会折叠。重叠只会出现在"),a("strong",[t._v("垂直方向")]),t._v("。")]),t._v(" "),a("p",[a("strong",[t._v("计算原则：")]),t._v(" 折叠合并后外边距的计算原则如下：")]),t._v(" "),a("ul",[a("li",[t._v("如果两者都是正数，那么就去最大者")]),t._v(" "),a("li",[t._v("如果是一正一负，就会正值减去负值的绝对值")]),t._v(" "),a("li",[t._v("两个都是负值时，用0减去两个中绝对值大的那个")])]),t._v(" "),a("p",[a("strong",[t._v("解决办法：")]),t._v(" 对于折叠的情况，主要有两种："),a("strong",[t._v("兄弟之间重叠")]),t._v("和"),a("strong",[t._v("父子之间重叠")])]),t._v(" "),a("p",[t._v("（1）兄弟之间重叠")]),t._v(" "),a("ul",[a("li",[t._v("底部元素变为行内盒子："),a("code",[t._v("display: inline-block")])]),t._v(" "),a("li",[t._v("底部元素设置浮动："),a("code",[t._v("float")])]),t._v(" "),a("li",[t._v("底部元素的position的值为"),a("code",[t._v("absolute/fixed")])])]),t._v(" "),a("p",[t._v("（2）父子之间重叠")]),t._v(" "),a("ul",[a("li",[t._v("父元素加入："),a("code",[t._v("overflow: hidden")])]),t._v(" "),a("li",[t._v("父元素添加透明边框："),a("code",[t._v("border:1px solid transparent")])]),t._v(" "),a("li",[t._v("子元素变为行内盒子："),a("code",[t._v("display: inline-block")])]),t._v(" "),a("li",[t._v("子元素加入浮动属性或定位")])]),t._v(" "),a("h2",{attrs:{id:"_5-元素的层叠顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-元素的层叠顺序"}},[t._v("#")]),t._v(" 5. 元素的层叠顺序")]),t._v(" "),a("p",[t._v("层叠顺序，英文称作 stacking order，表示元素发生层叠时有着特定的垂直显示顺序。")]),t._v(" "),a("p",[t._v("层叠顺序有里到外分别是：")]),t._v(" "),a("p",[t._v("（1）背景和边框：建立当前层叠上下文元素的背景和边框。")]),t._v(" "),a("p",[t._v("（2）负的z-index：当前层叠上下文中，z-index属性值为负的元素。")]),t._v(" "),a("p",[t._v("（3）块级盒：文档流内非行内级非定位后代元素。")]),t._v(" "),a("p",[t._v("（4）浮动盒：非定位浮动元素。")]),t._v(" "),a("p",[t._v("（5）行内盒：文档流内行内级非定位后代元素。")]),t._v(" "),a("p",[t._v("（6）z-index:0：层叠级数为0的定位元素。")]),t._v(" "),a("p",[t._v("（7）正z-index：z-index属性值为正的定位元素。")]),t._v(" "),a("p",[a("strong",[t._v("注意:")]),t._v(" 当定位元素z-index:auto，生成盒在当前层叠上下文中的层级为 0，不会建立新的层叠上下文，除非是根元素。")]),t._v(" "),a("h2",{attrs:{id:"_6-position的属性有哪些，区别是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-position的属性有哪些，区别是什么"}},[t._v("#")]),t._v(" 6. position的属性有哪些，区别是什么")]),t._v(" "),a("p",[t._v("position有以下属性值：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("属性值")]),t._v(" "),a("th",[t._v("概述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("absolute")]),t._v(" "),a("td",[t._v("生成绝对定位的元素，相对于static定位以外的一个父元素进行定位。元素的位置通过left、top、right、bottom属性进行规定。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("relative")]),t._v(" "),a("td",[t._v("生成相对定位的元素，相对于其原来的位置进行定位。元素的位置通过left、top、right、bottom属性进行规定。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("fixed")]),t._v(" "),a("td",[t._v("生成绝对定位的元素，指定元素相对于屏幕视⼝（viewport）的位置来指定元素位置。元素的位置在屏幕滚动时不会改变，⽐如回到顶部的按钮⼀般都是⽤此定位⽅式。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("static")]),t._v(" "),a("td",[t._v("默认值，没有定位，元素出现在正常的文档流中，会忽略 top, bottom, left, right 或者 z-index 声明，块级元素从上往下纵向排布，⾏级元素从左向右排列。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("sticky")]),t._v(" "),a("td",[t._v("相对它的最近滚动祖先（nearest scrolling ancestor）和 containing block(最近块级祖先 nearest block-level ancestor)，包括 table-related 元素，基于"),a("code",[t._v("top")]),t._v(", "),a("code",[t._v("right")]),t._v(", "),a("code",[t._v("bottom")]),t._v(", 和 "),a("code",[t._v("left")]),t._v("的值进行偏移。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("inherit")]),t._v(" "),a("td",[t._v("规定从父元素继承position属性的值")])])])]),t._v(" "),a("h2",{attrs:{id:"_7-display、float、position的关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-display、float、position的关系"}},[t._v("#")]),t._v(" 7. display、float、position的关系")]),t._v(" "),a("p",[t._v("（1）首先判断display属性是否为none，如果为none，则position和float属性的值不影响元素最后的表现。")]),t._v(" "),a("p",[t._v("（2）然后判断position的值是否为absolute或者fixed，如果是，则float属性失效，并且display的值应该被设置为table或者block，具体转换需要看初始转换值。")]),t._v(" "),a("p",[t._v("（3）如果position的值不为absolute或者fixed，则判断float属性的值是否为none，如果不是，则display的值则按上面的规则转换。注意，如果position的值为relative并且float属性的值存在，则relative相对于浮动后的最终位置定位。")]),t._v(" "),a("p",[t._v("（4）如果float的值为none，则判断元素是否为根元素，如果是根元素则display属性按照上面的规则转换，如果不是，则保持指定的display属性值不变。")]),t._v(" "),a("p",[t._v("总的来说，可以把它看作是一个类似优先级的机制，\"position:absolute\"和\"position:fixed\"优先级最高，有它存在的时候，浮动不起作用，'display'的值也需要调整；其次，元素的'float'特性的值不是\"none\"的时候或者它是根元素的时候，调整'display'的值；最后，非根元素，并且非浮动元素，并且非绝对定位的元素，'display'特性值同设置值。")]),t._v(" "),a("h2",{attrs:{id:"_8-absolute与fixed共同点与不同点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-absolute与fixed共同点与不同点"}},[t._v("#")]),t._v(" 8. absolute与fixed共同点与不同点")]),t._v(" "),a("p",[a("strong",[t._v("共同点：")])]),t._v(" "),a("ul",[a("li",[t._v("改变行内元素的呈现方式，"),a("strong",[t._v("将display置为inline-block")])]),t._v(" "),a("li",[t._v("使元素"),a("strong",[t._v("脱离普通文档流")]),t._v("，不再占据文档物理空间")]),t._v(" "),a("li",[t._v("覆"),a("strong",[t._v("盖非定位文档元素")])])]),t._v(" "),a("p",[a("strong",[t._v("不同点：")])]),t._v(" "),a("ul",[a("li",[t._v("abuselute与fixed的根元素不同，abuselute的根元素可以设置，fixed根元素是浏览器。")]),t._v(" "),a("li",[t._v("在有滚动条的页面中，absolute会跟着父元素进行移动，fixed固定在页面的具体位置。")])]),t._v(" "),a("h2",{attrs:{id:"_9-对-sticky-定位的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-对-sticky-定位的理解"}},[t._v("#")]),t._v(" 9. 对 sticky 定位的理解")]),t._v(" "),a("p",[t._v("sticky 英文字面意思是粘贴，所以可以把它称之为粘性定位。语法："),a("strong",[t._v("position: sticky;")]),t._v(" 基于用户的滚动位置来定位。")]),t._v(" "),a("p",[t._v("粘性定位的元素是依赖于用户的滚动，在 "),a("strong",[t._v("position:relative")]),t._v(" 与 "),a("strong",[t._v("position:fixed")]),t._v(" 定位之间切换。它的行为就像 "),a("strong",[t._v("position:relative;")]),t._v(" 而当页面滚动超出目标区域时，它的表现就像 "),a("strong",[t._v("position:fixed;")]),t._v("，它会固定在目标位置。元素定位表现为在跨越特定阈值前为相对定位，之后为固定定位。这个特定阈值指的是 top, right, bottom 或 left 之一，换言之，指定 top, right, bottom 或 left 四个阈值其中之一，才可使粘性定位生效。否则其行为与相对定位相同。")])])}),[],!1,null,null,null);s.default=v.exports}}]);